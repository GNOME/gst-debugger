/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gstdebugger.proto */

#ifndef PROTOBUF_C_gstdebugger_2eproto__INCLUDED
#define PROTOBUF_C_gstdebugger_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _GstDebugger__Value GstDebugger__Value;
typedef struct _GstDebugger__PropertyInfo GstDebugger__PropertyInfo;
typedef struct _GstDebugger__PropertyValue GstDebugger__PropertyValue;
typedef struct _GstDebugger__PropertyRequest GstDebugger__PropertyRequest;
typedef struct _GstDebugger__MessageInfo GstDebugger__MessageInfo;
typedef struct _GstDebugger__EventInfo GstDebugger__EventInfo;
typedef struct _GstDebugger__QueryInfo GstDebugger__QueryInfo;
typedef struct _GstDebugger__BufferInfo GstDebugger__BufferInfo;
typedef struct _GstDebugger__TypeDescriptionRequest GstDebugger__TypeDescriptionRequest;
typedef struct _GstDebugger__QueryHookRequest GstDebugger__QueryHookRequest;
typedef struct _GstDebugger__BufferHookRequest GstDebugger__BufferHookRequest;
typedef struct _GstDebugger__EventHookRequest GstDebugger__EventHookRequest;
typedef struct _GstDebugger__PadHookRequest GstDebugger__PadHookRequest;
typedef struct _GstDebugger__LogRequest GstDebugger__LogRequest;
typedef struct _GstDebugger__MessageRequest GstDebugger__MessageRequest;
typedef struct _GstDebugger__HookRequest GstDebugger__HookRequest;
typedef struct _GstDebugger__Command GstDebugger__Command;
typedef struct _GstDebugger__DebugCategories GstDebugger__DebugCategories;
typedef struct _GstDebugger__LogInfo GstDebugger__LogInfo;
typedef struct _GstDebugger__EnumFlagsValue GstDebugger__EnumFlagsValue;
typedef struct _GstDebugger__EnumFlagsType GstDebugger__EnumFlagsType;
typedef struct _GstDebugger__FactoryMeta GstDebugger__FactoryMeta;
typedef struct _GstDebugger__PadTemplate GstDebugger__PadTemplate;
typedef struct _GstDebugger__FactoryType GstDebugger__FactoryType;
typedef struct _GstDebugger__ElementKlass GstDebugger__ElementKlass;
typedef struct _GstDebugger__TopologyLink GstDebugger__TopologyLink;
typedef struct _GstDebugger__TopologyElement GstDebugger__TopologyElement;
typedef struct _GstDebugger__TopologyPad GstDebugger__TopologyPad;
typedef struct _GstDebugger__TopologyInfo GstDebugger__TopologyInfo;
typedef struct _GstDebugger__PadDynamicInfo GstDebugger__PadDynamicInfo;
typedef struct _GstDebugger__GStreamerData GstDebugger__GStreamerData;


/* --- enums --- */

typedef enum _GstDebugger__TypeDescriptionRequest__Type {
  GST_DEBUGGER__TYPE_DESCRIPTION_REQUEST__TYPE__FACTORY = 0,
  GST_DEBUGGER__TYPE_DESCRIPTION_REQUEST__TYPE__ENUM_FLAGS = 1,
  GST_DEBUGGER__TYPE_DESCRIPTION_REQUEST__TYPE__KLASS = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GST_DEBUGGER__TYPE_DESCRIPTION_REQUEST__TYPE)
} GstDebugger__TypeDescriptionRequest__Type;
typedef enum _GstDebugger__EnumFlagsType__EnumFlagsKind {
  GST_DEBUGGER__ENUM_FLAGS_TYPE__ENUM_FLAGS_KIND__ENUM = 0,
  GST_DEBUGGER__ENUM_FLAGS_TYPE__ENUM_FLAGS_KIND__FLAGS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GST_DEBUGGER__ENUM_FLAGS_TYPE__ENUM_FLAGS_KIND)
} GstDebugger__EnumFlagsType__EnumFlagsKind;
typedef enum _GstDebugger__Action {
  GST_DEBUGGER__ACTION__ADD = 0,
  GST_DEBUGGER__ACTION__REMOVE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GST_DEBUGGER__ACTION)
} GstDebugger__Action;

/* --- messages --- */

struct  _GstDebugger__Value
{
  ProtobufCMessage base;
  uint64_t gtype;
  protobuf_c_boolean has_internal_type;
  int32_t internal_type;
  ProtobufCBinaryData data;
  char *type_name;
};
#define GST_DEBUGGER__VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__value__descriptor) \
    , 0, 0,0, {0,NULL}, NULL }


struct  _GstDebugger__PropertyInfo
{
  ProtobufCMessage base;
  char *name;
  char *nick;
  char *blurb;
  int32_t flags;
  GstDebugger__Value *default_value;
};
#define GST_DEBUGGER__PROPERTY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__property_info__descriptor) \
    , NULL, NULL, NULL, 0, NULL }


struct  _GstDebugger__PropertyValue
{
  ProtobufCMessage base;
  char *name;
  char *object;
  GstDebugger__Value *value;
};
#define GST_DEBUGGER__PROPERTY_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__property_value__descriptor) \
    , NULL, NULL, NULL }


struct  _GstDebugger__PropertyRequest
{
  ProtobufCMessage base;
  char *name;
  char *object;
};
#define GST_DEBUGGER__PROPERTY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__property_request__descriptor) \
    , NULL, NULL }


struct  _GstDebugger__MessageInfo
{
  ProtobufCMessage base;
  int32_t type;
  uint64_t timestamp;
  char *source;
  uint32_t seqnum;
  ProtobufCBinaryData structure_data;
};
#define GST_DEBUGGER__MESSAGE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__message_info__descriptor) \
    , 0, 0, NULL, 0, {0,NULL} }


struct  _GstDebugger__EventInfo
{
  ProtobufCMessage base;
  int32_t type;
  uint64_t timestamp;
  uint32_t seqnum;
  char *pad;
  ProtobufCBinaryData structure_data;
};
#define GST_DEBUGGER__EVENT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__event_info__descriptor) \
    , 0, 0, 0, NULL, {0,NULL} }


struct  _GstDebugger__QueryInfo
{
  ProtobufCMessage base;
  int32_t type;
  char *pad;
  ProtobufCBinaryData structure_data;
};
#define GST_DEBUGGER__QUERY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__query_info__descriptor) \
    , 0, NULL, {0,NULL} }


struct  _GstDebugger__BufferInfo
{
  ProtobufCMessage base;
  uint64_t pts;
  uint64_t dts;
  uint64_t duration;
  uint64_t offset;
  uint64_t offset_end;
  uint64_t size;
  char *pad;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
};
#define GST_DEBUGGER__BUFFER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__buffer_info__descriptor) \
    , 0, 0, 0, 0, 0, 0, NULL, 0,{0,NULL} }


struct  _GstDebugger__TypeDescriptionRequest
{
  ProtobufCMessage base;
  char *name;
  GstDebugger__TypeDescriptionRequest__Type type;
};
#define GST_DEBUGGER__TYPE_DESCRIPTION_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__type_description_request__descriptor) \
    , NULL, 0 }


struct  _GstDebugger__QueryHookRequest
{
  ProtobufCMessage base;
  int32_t type;
};
#define GST_DEBUGGER__QUERY_HOOK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__query_hook_request__descriptor) \
    , 0 }


struct  _GstDebugger__BufferHookRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean send_data;
};
#define GST_DEBUGGER__BUFFER_HOOK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__buffer_hook_request__descriptor) \
    , 0 }


struct  _GstDebugger__EventHookRequest
{
  ProtobufCMessage base;
  int32_t type;
};
#define GST_DEBUGGER__EVENT_HOOK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__event_hook_request__descriptor) \
    , 0 }


typedef enum {
  GST_DEBUGGER__PAD_HOOK_REQUEST__PAD_HOOK_TYPE__NOT_SET = 0,
  GST_DEBUGGER__PAD_HOOK_REQUEST__PAD_HOOK_TYPE_QUERY = 2,
  GST_DEBUGGER__PAD_HOOK_REQUEST__PAD_HOOK_TYPE_BUFFER = 3,
  GST_DEBUGGER__PAD_HOOK_REQUEST__PAD_HOOK_TYPE_EVENT = 4,
} GstDebugger__PadHookRequest__PadHookTypeCase;

struct  _GstDebugger__PadHookRequest
{
  ProtobufCMessage base;
  char *pad;
  GstDebugger__PadHookRequest__PadHookTypeCase pad_hook_type_case;
  union {
    GstDebugger__QueryHookRequest *query;
    GstDebugger__BufferHookRequest *buffer;
    GstDebugger__EventHookRequest *event;
  };
};
#define GST_DEBUGGER__PAD_HOOK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__pad_hook_request__descriptor) \
    , NULL, GST_DEBUGGER__PAD_HOOK_REQUEST__PAD_HOOK_TYPE__NOT_SET, {0} }


struct  _GstDebugger__LogRequest
{
  ProtobufCMessage base;
  int32_t level;
  char *category;
};
#define GST_DEBUGGER__LOG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__log_request__descriptor) \
    , 0, NULL }


struct  _GstDebugger__MessageRequest
{
  ProtobufCMessage base;
  int32_t type;
};
#define GST_DEBUGGER__MESSAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__message_request__descriptor) \
    , 0 }


typedef enum {
  GST_DEBUGGER__HOOK_REQUEST__HOOK_TYPE__NOT_SET = 0,
  GST_DEBUGGER__HOOK_REQUEST__HOOK_TYPE_MESSAGE = 2,
  GST_DEBUGGER__HOOK_REQUEST__HOOK_TYPE_LOG = 3,
  GST_DEBUGGER__HOOK_REQUEST__HOOK_TYPE_PAD_HOOK = 4,
} GstDebugger__HookRequest__HookTypeCase;

struct  _GstDebugger__HookRequest
{
  ProtobufCMessage base;
  GstDebugger__Action action;
  GstDebugger__HookRequest__HookTypeCase hook_type_case;
  union {
    GstDebugger__MessageRequest *message;
    GstDebugger__LogRequest *log;
    GstDebugger__PadHookRequest *pad_hook;
  };
};
#define GST_DEBUGGER__HOOK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__hook_request__descriptor) \
    , 0, GST_DEBUGGER__HOOK_REQUEST__HOOK_TYPE__NOT_SET, {0} }


typedef enum {
  GST_DEBUGGER__COMMAND__COMMAND_TYPE__NOT_SET = 0,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_TYPE_DESCRIPTION = 1,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_DEBUG_CATEGORIES_LIST = 2,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_HOOK_REQUEST = 3,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_LOG_THRESHOLD = 4,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_ENTIRE_TOPOLOGY = 5,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_PROPERTY = 6,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_PROPERTY_SET = 7,
  GST_DEBUGGER__COMMAND__COMMAND_TYPE_PAD_DYNAMIC_INFO = 8,
} GstDebugger__Command__CommandTypeCase;

struct  _GstDebugger__Command
{
  ProtobufCMessage base;
  GstDebugger__Command__CommandTypeCase command_type_case;
  union {
    GstDebugger__TypeDescriptionRequest *type_description;
    protobuf_c_boolean debug_categories_list;
    GstDebugger__HookRequest *hook_request;
    char *log_threshold;
    protobuf_c_boolean entire_topology;
    GstDebugger__PropertyRequest *property;
    GstDebugger__PropertyValue *property_set;
    char *pad_dynamic_info;
  };
};
#define GST_DEBUGGER__COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__command__descriptor) \
    , GST_DEBUGGER__COMMAND__COMMAND_TYPE__NOT_SET, {0} }


struct  _GstDebugger__DebugCategories
{
  ProtobufCMessage base;
  size_t n_category;
  char **category;
};
#define GST_DEBUGGER__DEBUG_CATEGORIES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__debug_categories__descriptor) \
    , 0,NULL }


struct  _GstDebugger__LogInfo
{
  ProtobufCMessage base;
  int32_t level;
  char *category;
  char *file;
  char *function;
  int32_t line;
  char *object;
  char *message;
};
#define GST_DEBUGGER__LOG_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__log_info__descriptor) \
    , 0, NULL, NULL, NULL, 0, NULL, NULL }


struct  _GstDebugger__EnumFlagsValue
{
  ProtobufCMessage base;
  char *name;
  int32_t value;
  char *nick;
};
#define GST_DEBUGGER__ENUM_FLAGS_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__enum_flags_value__descriptor) \
    , NULL, 0, NULL }


struct  _GstDebugger__EnumFlagsType
{
  ProtobufCMessage base;
  char *type_name;
  GstDebugger__EnumFlagsType__EnumFlagsKind kind;
  size_t n_values;
  GstDebugger__EnumFlagsValue **values;
};
#define GST_DEBUGGER__ENUM_FLAGS_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__enum_flags_type__descriptor) \
    , NULL, 0, 0,NULL }


struct  _GstDebugger__FactoryMeta
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define GST_DEBUGGER__FACTORY_META__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__factory_meta__descriptor) \
    , NULL, NULL }


struct  _GstDebugger__PadTemplate
{
  ProtobufCMessage base;
  char *name_template;
  int32_t direction;
  int32_t presence;
  char *caps;
};
#define GST_DEBUGGER__PAD_TEMPLATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__pad_template__descriptor) \
    , NULL, 0, 0, NULL }


struct  _GstDebugger__FactoryType
{
  ProtobufCMessage base;
  char *name;
  size_t n_metadata;
  GstDebugger__FactoryMeta **metadata;
  size_t n_templates;
  GstDebugger__PadTemplate **templates;
};
#define GST_DEBUGGER__FACTORY_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__factory_type__descriptor) \
    , NULL, 0,NULL, 0,NULL }


struct  _GstDebugger__ElementKlass
{
  ProtobufCMessage base;
  char *name;
  size_t n_property_info;
  GstDebugger__PropertyInfo **property_info;
};
#define GST_DEBUGGER__ELEMENT_KLASS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__element_klass__descriptor) \
    , NULL, 0,NULL }


struct  _GstDebugger__TopologyLink
{
  ProtobufCMessage base;
  char *src_pad;
  char *sink_pad;
};
#define GST_DEBUGGER__TOPOLOGY_LINK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__topology_link__descriptor) \
    , NULL, NULL }


struct  _GstDebugger__TopologyElement
{
  ProtobufCMessage base;
  char *path;
  char *type_name;
  protobuf_c_boolean is_bin;
  char *factory_name;
};
#define GST_DEBUGGER__TOPOLOGY_ELEMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__topology_element__descriptor) \
    , NULL, NULL, 0, NULL }


struct  _GstDebugger__TopologyPad
{
  ProtobufCMessage base;
  char *path;
  protobuf_c_boolean is_ghostpad;
  int32_t direction;
  int32_t presence;
  GstDebugger__PadTemplate *template_;
};
#define GST_DEBUGGER__TOPOLOGY_PAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__topology_pad__descriptor) \
    , NULL, 0, 0, 0, NULL }


typedef enum {
  GST_DEBUGGER__TOPOLOGY_INFO__TOPOLOGY_TYPE__NOT_SET = 0,
  GST_DEBUGGER__TOPOLOGY_INFO__TOPOLOGY_TYPE_LINK = 2,
  GST_DEBUGGER__TOPOLOGY_INFO__TOPOLOGY_TYPE_ELEMENT = 3,
  GST_DEBUGGER__TOPOLOGY_INFO__TOPOLOGY_TYPE_PAD = 4,
} GstDebugger__TopologyInfo__TopologyTypeCase;

struct  _GstDebugger__TopologyInfo
{
  ProtobufCMessage base;
  GstDebugger__Action action;
  GstDebugger__TopologyInfo__TopologyTypeCase topology_type_case;
  union {
    GstDebugger__TopologyLink *link;
    GstDebugger__TopologyElement *element;
    GstDebugger__TopologyPad *pad;
  };
};
#define GST_DEBUGGER__TOPOLOGY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__topology_info__descriptor) \
    , 0, GST_DEBUGGER__TOPOLOGY_INFO__TOPOLOGY_TYPE__NOT_SET, {0} }


struct  _GstDebugger__PadDynamicInfo
{
  ProtobufCMessage base;
  char *allowed_caps;
  char *current_caps;
  char *pad;
};
#define GST_DEBUGGER__PAD_DYNAMIC_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__pad_dynamic_info__descriptor) \
    , NULL, NULL, NULL }


typedef enum {
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE__NOT_SET = 0,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_DEBUG_CATEGORIES = 1,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_LOG_INFO = 2,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_ENUM_FLAGS_TYPE = 3,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_FACTORY = 4,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_MESSAGE_INFO = 5,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_CONFIRMATION = 6,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_EVENT_INFO = 7,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_TOPOLOGY_INFO = 8,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_QUERY_INFO = 9,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_PROPERTY_VALUE = 10,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_ELEMENT_KLASS = 11,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_BUFFER_INFO = 12,
  GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE_PAD_DYNAMIC_INFO = 13,
} GstDebugger__GStreamerData__InfoTypeCase;

struct  _GstDebugger__GStreamerData
{
  ProtobufCMessage base;
  GstDebugger__GStreamerData__InfoTypeCase info_type_case;
  union {
    GstDebugger__DebugCategories *debug_categories;
    GstDebugger__LogInfo *log_info;
    GstDebugger__EnumFlagsType *enum_flags_type;
    GstDebugger__FactoryType *factory;
    GstDebugger__MessageInfo *message_info;
    GstDebugger__Command *confirmation;
    GstDebugger__EventInfo *event_info;
    GstDebugger__TopologyInfo *topology_info;
    GstDebugger__QueryInfo *query_info;
    GstDebugger__PropertyValue *property_value;
    GstDebugger__ElementKlass *element_klass;
    GstDebugger__BufferInfo *buffer_info;
    GstDebugger__PadDynamicInfo *pad_dynamic_info;
  };
};
#define GST_DEBUGGER__GSTREAMER_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gst_debugger__gstreamer_data__descriptor) \
    , GST_DEBUGGER__GSTREAMER_DATA__INFO_TYPE__NOT_SET, {0} }


/* GstDebugger__Value methods */
void   gst_debugger__value__init
                     (GstDebugger__Value         *message);
size_t gst_debugger__value__get_packed_size
                     (const GstDebugger__Value   *message);
size_t gst_debugger__value__pack
                     (const GstDebugger__Value   *message,
                      uint8_t             *out);
size_t gst_debugger__value__pack_to_buffer
                     (const GstDebugger__Value   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__Value *
       gst_debugger__value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__value__free_unpacked
                     (GstDebugger__Value *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__PropertyInfo methods */
void   gst_debugger__property_info__init
                     (GstDebugger__PropertyInfo         *message);
size_t gst_debugger__property_info__get_packed_size
                     (const GstDebugger__PropertyInfo   *message);
size_t gst_debugger__property_info__pack
                     (const GstDebugger__PropertyInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__property_info__pack_to_buffer
                     (const GstDebugger__PropertyInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__PropertyInfo *
       gst_debugger__property_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__property_info__free_unpacked
                     (GstDebugger__PropertyInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__PropertyValue methods */
void   gst_debugger__property_value__init
                     (GstDebugger__PropertyValue         *message);
size_t gst_debugger__property_value__get_packed_size
                     (const GstDebugger__PropertyValue   *message);
size_t gst_debugger__property_value__pack
                     (const GstDebugger__PropertyValue   *message,
                      uint8_t             *out);
size_t gst_debugger__property_value__pack_to_buffer
                     (const GstDebugger__PropertyValue   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__PropertyValue *
       gst_debugger__property_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__property_value__free_unpacked
                     (GstDebugger__PropertyValue *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__PropertyRequest methods */
void   gst_debugger__property_request__init
                     (GstDebugger__PropertyRequest         *message);
size_t gst_debugger__property_request__get_packed_size
                     (const GstDebugger__PropertyRequest   *message);
size_t gst_debugger__property_request__pack
                     (const GstDebugger__PropertyRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__property_request__pack_to_buffer
                     (const GstDebugger__PropertyRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__PropertyRequest *
       gst_debugger__property_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__property_request__free_unpacked
                     (GstDebugger__PropertyRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__MessageInfo methods */
void   gst_debugger__message_info__init
                     (GstDebugger__MessageInfo         *message);
size_t gst_debugger__message_info__get_packed_size
                     (const GstDebugger__MessageInfo   *message);
size_t gst_debugger__message_info__pack
                     (const GstDebugger__MessageInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__message_info__pack_to_buffer
                     (const GstDebugger__MessageInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__MessageInfo *
       gst_debugger__message_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__message_info__free_unpacked
                     (GstDebugger__MessageInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__EventInfo methods */
void   gst_debugger__event_info__init
                     (GstDebugger__EventInfo         *message);
size_t gst_debugger__event_info__get_packed_size
                     (const GstDebugger__EventInfo   *message);
size_t gst_debugger__event_info__pack
                     (const GstDebugger__EventInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__event_info__pack_to_buffer
                     (const GstDebugger__EventInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__EventInfo *
       gst_debugger__event_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__event_info__free_unpacked
                     (GstDebugger__EventInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__QueryInfo methods */
void   gst_debugger__query_info__init
                     (GstDebugger__QueryInfo         *message);
size_t gst_debugger__query_info__get_packed_size
                     (const GstDebugger__QueryInfo   *message);
size_t gst_debugger__query_info__pack
                     (const GstDebugger__QueryInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__query_info__pack_to_buffer
                     (const GstDebugger__QueryInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__QueryInfo *
       gst_debugger__query_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__query_info__free_unpacked
                     (GstDebugger__QueryInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__BufferInfo methods */
void   gst_debugger__buffer_info__init
                     (GstDebugger__BufferInfo         *message);
size_t gst_debugger__buffer_info__get_packed_size
                     (const GstDebugger__BufferInfo   *message);
size_t gst_debugger__buffer_info__pack
                     (const GstDebugger__BufferInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__buffer_info__pack_to_buffer
                     (const GstDebugger__BufferInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__BufferInfo *
       gst_debugger__buffer_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__buffer_info__free_unpacked
                     (GstDebugger__BufferInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__TypeDescriptionRequest methods */
void   gst_debugger__type_description_request__init
                     (GstDebugger__TypeDescriptionRequest         *message);
size_t gst_debugger__type_description_request__get_packed_size
                     (const GstDebugger__TypeDescriptionRequest   *message);
size_t gst_debugger__type_description_request__pack
                     (const GstDebugger__TypeDescriptionRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__type_description_request__pack_to_buffer
                     (const GstDebugger__TypeDescriptionRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__TypeDescriptionRequest *
       gst_debugger__type_description_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__type_description_request__free_unpacked
                     (GstDebugger__TypeDescriptionRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__QueryHookRequest methods */
void   gst_debugger__query_hook_request__init
                     (GstDebugger__QueryHookRequest         *message);
size_t gst_debugger__query_hook_request__get_packed_size
                     (const GstDebugger__QueryHookRequest   *message);
size_t gst_debugger__query_hook_request__pack
                     (const GstDebugger__QueryHookRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__query_hook_request__pack_to_buffer
                     (const GstDebugger__QueryHookRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__QueryHookRequest *
       gst_debugger__query_hook_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__query_hook_request__free_unpacked
                     (GstDebugger__QueryHookRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__BufferHookRequest methods */
void   gst_debugger__buffer_hook_request__init
                     (GstDebugger__BufferHookRequest         *message);
size_t gst_debugger__buffer_hook_request__get_packed_size
                     (const GstDebugger__BufferHookRequest   *message);
size_t gst_debugger__buffer_hook_request__pack
                     (const GstDebugger__BufferHookRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__buffer_hook_request__pack_to_buffer
                     (const GstDebugger__BufferHookRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__BufferHookRequest *
       gst_debugger__buffer_hook_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__buffer_hook_request__free_unpacked
                     (GstDebugger__BufferHookRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__EventHookRequest methods */
void   gst_debugger__event_hook_request__init
                     (GstDebugger__EventHookRequest         *message);
size_t gst_debugger__event_hook_request__get_packed_size
                     (const GstDebugger__EventHookRequest   *message);
size_t gst_debugger__event_hook_request__pack
                     (const GstDebugger__EventHookRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__event_hook_request__pack_to_buffer
                     (const GstDebugger__EventHookRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__EventHookRequest *
       gst_debugger__event_hook_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__event_hook_request__free_unpacked
                     (GstDebugger__EventHookRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__PadHookRequest methods */
void   gst_debugger__pad_hook_request__init
                     (GstDebugger__PadHookRequest         *message);
size_t gst_debugger__pad_hook_request__get_packed_size
                     (const GstDebugger__PadHookRequest   *message);
size_t gst_debugger__pad_hook_request__pack
                     (const GstDebugger__PadHookRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__pad_hook_request__pack_to_buffer
                     (const GstDebugger__PadHookRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__PadHookRequest *
       gst_debugger__pad_hook_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__pad_hook_request__free_unpacked
                     (GstDebugger__PadHookRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__LogRequest methods */
void   gst_debugger__log_request__init
                     (GstDebugger__LogRequest         *message);
size_t gst_debugger__log_request__get_packed_size
                     (const GstDebugger__LogRequest   *message);
size_t gst_debugger__log_request__pack
                     (const GstDebugger__LogRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__log_request__pack_to_buffer
                     (const GstDebugger__LogRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__LogRequest *
       gst_debugger__log_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__log_request__free_unpacked
                     (GstDebugger__LogRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__MessageRequest methods */
void   gst_debugger__message_request__init
                     (GstDebugger__MessageRequest         *message);
size_t gst_debugger__message_request__get_packed_size
                     (const GstDebugger__MessageRequest   *message);
size_t gst_debugger__message_request__pack
                     (const GstDebugger__MessageRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__message_request__pack_to_buffer
                     (const GstDebugger__MessageRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__MessageRequest *
       gst_debugger__message_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__message_request__free_unpacked
                     (GstDebugger__MessageRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__HookRequest methods */
void   gst_debugger__hook_request__init
                     (GstDebugger__HookRequest         *message);
size_t gst_debugger__hook_request__get_packed_size
                     (const GstDebugger__HookRequest   *message);
size_t gst_debugger__hook_request__pack
                     (const GstDebugger__HookRequest   *message,
                      uint8_t             *out);
size_t gst_debugger__hook_request__pack_to_buffer
                     (const GstDebugger__HookRequest   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__HookRequest *
       gst_debugger__hook_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__hook_request__free_unpacked
                     (GstDebugger__HookRequest *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__Command methods */
void   gst_debugger__command__init
                     (GstDebugger__Command         *message);
size_t gst_debugger__command__get_packed_size
                     (const GstDebugger__Command   *message);
size_t gst_debugger__command__pack
                     (const GstDebugger__Command   *message,
                      uint8_t             *out);
size_t gst_debugger__command__pack_to_buffer
                     (const GstDebugger__Command   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__Command *
       gst_debugger__command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__command__free_unpacked
                     (GstDebugger__Command *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__DebugCategories methods */
void   gst_debugger__debug_categories__init
                     (GstDebugger__DebugCategories         *message);
size_t gst_debugger__debug_categories__get_packed_size
                     (const GstDebugger__DebugCategories   *message);
size_t gst_debugger__debug_categories__pack
                     (const GstDebugger__DebugCategories   *message,
                      uint8_t             *out);
size_t gst_debugger__debug_categories__pack_to_buffer
                     (const GstDebugger__DebugCategories   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__DebugCategories *
       gst_debugger__debug_categories__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__debug_categories__free_unpacked
                     (GstDebugger__DebugCategories *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__LogInfo methods */
void   gst_debugger__log_info__init
                     (GstDebugger__LogInfo         *message);
size_t gst_debugger__log_info__get_packed_size
                     (const GstDebugger__LogInfo   *message);
size_t gst_debugger__log_info__pack
                     (const GstDebugger__LogInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__log_info__pack_to_buffer
                     (const GstDebugger__LogInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__LogInfo *
       gst_debugger__log_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__log_info__free_unpacked
                     (GstDebugger__LogInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__EnumFlagsValue methods */
void   gst_debugger__enum_flags_value__init
                     (GstDebugger__EnumFlagsValue         *message);
size_t gst_debugger__enum_flags_value__get_packed_size
                     (const GstDebugger__EnumFlagsValue   *message);
size_t gst_debugger__enum_flags_value__pack
                     (const GstDebugger__EnumFlagsValue   *message,
                      uint8_t             *out);
size_t gst_debugger__enum_flags_value__pack_to_buffer
                     (const GstDebugger__EnumFlagsValue   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__EnumFlagsValue *
       gst_debugger__enum_flags_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__enum_flags_value__free_unpacked
                     (GstDebugger__EnumFlagsValue *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__EnumFlagsType methods */
void   gst_debugger__enum_flags_type__init
                     (GstDebugger__EnumFlagsType         *message);
size_t gst_debugger__enum_flags_type__get_packed_size
                     (const GstDebugger__EnumFlagsType   *message);
size_t gst_debugger__enum_flags_type__pack
                     (const GstDebugger__EnumFlagsType   *message,
                      uint8_t             *out);
size_t gst_debugger__enum_flags_type__pack_to_buffer
                     (const GstDebugger__EnumFlagsType   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__EnumFlagsType *
       gst_debugger__enum_flags_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__enum_flags_type__free_unpacked
                     (GstDebugger__EnumFlagsType *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__FactoryMeta methods */
void   gst_debugger__factory_meta__init
                     (GstDebugger__FactoryMeta         *message);
size_t gst_debugger__factory_meta__get_packed_size
                     (const GstDebugger__FactoryMeta   *message);
size_t gst_debugger__factory_meta__pack
                     (const GstDebugger__FactoryMeta   *message,
                      uint8_t             *out);
size_t gst_debugger__factory_meta__pack_to_buffer
                     (const GstDebugger__FactoryMeta   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__FactoryMeta *
       gst_debugger__factory_meta__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__factory_meta__free_unpacked
                     (GstDebugger__FactoryMeta *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__PadTemplate methods */
void   gst_debugger__pad_template__init
                     (GstDebugger__PadTemplate         *message);
size_t gst_debugger__pad_template__get_packed_size
                     (const GstDebugger__PadTemplate   *message);
size_t gst_debugger__pad_template__pack
                     (const GstDebugger__PadTemplate   *message,
                      uint8_t             *out);
size_t gst_debugger__pad_template__pack_to_buffer
                     (const GstDebugger__PadTemplate   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__PadTemplate *
       gst_debugger__pad_template__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__pad_template__free_unpacked
                     (GstDebugger__PadTemplate *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__FactoryType methods */
void   gst_debugger__factory_type__init
                     (GstDebugger__FactoryType         *message);
size_t gst_debugger__factory_type__get_packed_size
                     (const GstDebugger__FactoryType   *message);
size_t gst_debugger__factory_type__pack
                     (const GstDebugger__FactoryType   *message,
                      uint8_t             *out);
size_t gst_debugger__factory_type__pack_to_buffer
                     (const GstDebugger__FactoryType   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__FactoryType *
       gst_debugger__factory_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__factory_type__free_unpacked
                     (GstDebugger__FactoryType *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__ElementKlass methods */
void   gst_debugger__element_klass__init
                     (GstDebugger__ElementKlass         *message);
size_t gst_debugger__element_klass__get_packed_size
                     (const GstDebugger__ElementKlass   *message);
size_t gst_debugger__element_klass__pack
                     (const GstDebugger__ElementKlass   *message,
                      uint8_t             *out);
size_t gst_debugger__element_klass__pack_to_buffer
                     (const GstDebugger__ElementKlass   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__ElementKlass *
       gst_debugger__element_klass__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__element_klass__free_unpacked
                     (GstDebugger__ElementKlass *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__TopologyLink methods */
void   gst_debugger__topology_link__init
                     (GstDebugger__TopologyLink         *message);
size_t gst_debugger__topology_link__get_packed_size
                     (const GstDebugger__TopologyLink   *message);
size_t gst_debugger__topology_link__pack
                     (const GstDebugger__TopologyLink   *message,
                      uint8_t             *out);
size_t gst_debugger__topology_link__pack_to_buffer
                     (const GstDebugger__TopologyLink   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__TopologyLink *
       gst_debugger__topology_link__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__topology_link__free_unpacked
                     (GstDebugger__TopologyLink *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__TopologyElement methods */
void   gst_debugger__topology_element__init
                     (GstDebugger__TopologyElement         *message);
size_t gst_debugger__topology_element__get_packed_size
                     (const GstDebugger__TopologyElement   *message);
size_t gst_debugger__topology_element__pack
                     (const GstDebugger__TopologyElement   *message,
                      uint8_t             *out);
size_t gst_debugger__topology_element__pack_to_buffer
                     (const GstDebugger__TopologyElement   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__TopologyElement *
       gst_debugger__topology_element__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__topology_element__free_unpacked
                     (GstDebugger__TopologyElement *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__TopologyPad methods */
void   gst_debugger__topology_pad__init
                     (GstDebugger__TopologyPad         *message);
size_t gst_debugger__topology_pad__get_packed_size
                     (const GstDebugger__TopologyPad   *message);
size_t gst_debugger__topology_pad__pack
                     (const GstDebugger__TopologyPad   *message,
                      uint8_t             *out);
size_t gst_debugger__topology_pad__pack_to_buffer
                     (const GstDebugger__TopologyPad   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__TopologyPad *
       gst_debugger__topology_pad__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__topology_pad__free_unpacked
                     (GstDebugger__TopologyPad *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__TopologyInfo methods */
void   gst_debugger__topology_info__init
                     (GstDebugger__TopologyInfo         *message);
size_t gst_debugger__topology_info__get_packed_size
                     (const GstDebugger__TopologyInfo   *message);
size_t gst_debugger__topology_info__pack
                     (const GstDebugger__TopologyInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__topology_info__pack_to_buffer
                     (const GstDebugger__TopologyInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__TopologyInfo *
       gst_debugger__topology_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__topology_info__free_unpacked
                     (GstDebugger__TopologyInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__PadDynamicInfo methods */
void   gst_debugger__pad_dynamic_info__init
                     (GstDebugger__PadDynamicInfo         *message);
size_t gst_debugger__pad_dynamic_info__get_packed_size
                     (const GstDebugger__PadDynamicInfo   *message);
size_t gst_debugger__pad_dynamic_info__pack
                     (const GstDebugger__PadDynamicInfo   *message,
                      uint8_t             *out);
size_t gst_debugger__pad_dynamic_info__pack_to_buffer
                     (const GstDebugger__PadDynamicInfo   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__PadDynamicInfo *
       gst_debugger__pad_dynamic_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__pad_dynamic_info__free_unpacked
                     (GstDebugger__PadDynamicInfo *message,
                      ProtobufCAllocator *allocator);
/* GstDebugger__GStreamerData methods */
void   gst_debugger__gstreamer_data__init
                     (GstDebugger__GStreamerData         *message);
size_t gst_debugger__gstreamer_data__get_packed_size
                     (const GstDebugger__GStreamerData   *message);
size_t gst_debugger__gstreamer_data__pack
                     (const GstDebugger__GStreamerData   *message,
                      uint8_t             *out);
size_t gst_debugger__gstreamer_data__pack_to_buffer
                     (const GstDebugger__GStreamerData   *message,
                      ProtobufCBuffer     *buffer);
GstDebugger__GStreamerData *
       gst_debugger__gstreamer_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gst_debugger__gstreamer_data__free_unpacked
                     (GstDebugger__GStreamerData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*GstDebugger__Value_Closure)
                 (const GstDebugger__Value *message,
                  void *closure_data);
typedef void (*GstDebugger__PropertyInfo_Closure)
                 (const GstDebugger__PropertyInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__PropertyValue_Closure)
                 (const GstDebugger__PropertyValue *message,
                  void *closure_data);
typedef void (*GstDebugger__PropertyRequest_Closure)
                 (const GstDebugger__PropertyRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__MessageInfo_Closure)
                 (const GstDebugger__MessageInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__EventInfo_Closure)
                 (const GstDebugger__EventInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__QueryInfo_Closure)
                 (const GstDebugger__QueryInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__BufferInfo_Closure)
                 (const GstDebugger__BufferInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__TypeDescriptionRequest_Closure)
                 (const GstDebugger__TypeDescriptionRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__QueryHookRequest_Closure)
                 (const GstDebugger__QueryHookRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__BufferHookRequest_Closure)
                 (const GstDebugger__BufferHookRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__EventHookRequest_Closure)
                 (const GstDebugger__EventHookRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__PadHookRequest_Closure)
                 (const GstDebugger__PadHookRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__LogRequest_Closure)
                 (const GstDebugger__LogRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__MessageRequest_Closure)
                 (const GstDebugger__MessageRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__HookRequest_Closure)
                 (const GstDebugger__HookRequest *message,
                  void *closure_data);
typedef void (*GstDebugger__Command_Closure)
                 (const GstDebugger__Command *message,
                  void *closure_data);
typedef void (*GstDebugger__DebugCategories_Closure)
                 (const GstDebugger__DebugCategories *message,
                  void *closure_data);
typedef void (*GstDebugger__LogInfo_Closure)
                 (const GstDebugger__LogInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__EnumFlagsValue_Closure)
                 (const GstDebugger__EnumFlagsValue *message,
                  void *closure_data);
typedef void (*GstDebugger__EnumFlagsType_Closure)
                 (const GstDebugger__EnumFlagsType *message,
                  void *closure_data);
typedef void (*GstDebugger__FactoryMeta_Closure)
                 (const GstDebugger__FactoryMeta *message,
                  void *closure_data);
typedef void (*GstDebugger__PadTemplate_Closure)
                 (const GstDebugger__PadTemplate *message,
                  void *closure_data);
typedef void (*GstDebugger__FactoryType_Closure)
                 (const GstDebugger__FactoryType *message,
                  void *closure_data);
typedef void (*GstDebugger__ElementKlass_Closure)
                 (const GstDebugger__ElementKlass *message,
                  void *closure_data);
typedef void (*GstDebugger__TopologyLink_Closure)
                 (const GstDebugger__TopologyLink *message,
                  void *closure_data);
typedef void (*GstDebugger__TopologyElement_Closure)
                 (const GstDebugger__TopologyElement *message,
                  void *closure_data);
typedef void (*GstDebugger__TopologyPad_Closure)
                 (const GstDebugger__TopologyPad *message,
                  void *closure_data);
typedef void (*GstDebugger__TopologyInfo_Closure)
                 (const GstDebugger__TopologyInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__PadDynamicInfo_Closure)
                 (const GstDebugger__PadDynamicInfo *message,
                  void *closure_data);
typedef void (*GstDebugger__GStreamerData_Closure)
                 (const GstDebugger__GStreamerData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    gst_debugger__action__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__value__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__property_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__property_value__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__property_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__message_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__event_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__query_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__buffer_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__type_description_request__descriptor;
extern const ProtobufCEnumDescriptor    gst_debugger__type_description_request__type__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__query_hook_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__buffer_hook_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__event_hook_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__pad_hook_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__log_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__message_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__hook_request__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__command__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__debug_categories__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__log_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__enum_flags_value__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__enum_flags_type__descriptor;
extern const ProtobufCEnumDescriptor    gst_debugger__enum_flags_type__enum_flags_kind__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__factory_meta__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__pad_template__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__factory_type__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__element_klass__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__topology_link__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__topology_element__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__topology_pad__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__topology_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__pad_dynamic_info__descriptor;
extern const ProtobufCMessageDescriptor gst_debugger__gstreamer_data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gstdebugger_2eproto__INCLUDED */
